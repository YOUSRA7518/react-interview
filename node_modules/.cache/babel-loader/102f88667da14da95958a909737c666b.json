{"ast":null,"code":"import _classCallCheck from \"/Users/yousrachahi/Downloads/react-interview-master 2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yousrachahi/Downloads/react-interview-master 2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yousrachahi/Downloads/react-interview-master 2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yousrachahi/Downloads/react-interview-master 2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yousrachahi/Downloads/react-interview-master 2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yousrachahi/Downloads/react-interview-master 2/src/Multiselect.js\";\nimport React, { Component } from \"react\";\nimport FlipMove from \"react-flip-move\";\nimport \"./Multiselect.css\";\n\nvar Multiselect =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Multiselect, _Component);\n\n  function Multiselect() {\n    _classCallCheck(this, Multiselect);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Multiselect).apply(this, arguments));\n  }\n\n  _createClass(Multiselect, [{\n    key: \"selectOption\",\n    value: function selectOption(option) {\n      if (!this.props.multiple) {\n        document.querySelectorAll(\".filter-container.\" + this.props.type + \" .dropdown > div\").forEach(function (el) {\n          el.classList.remove(\"selected\");\n        });\n        this.selected = option;\n      }\n\n      document.querySelector(\".dropdown > div[option='\" + option + \"']\").classList.toggle(\"selected\");\n      this.props.onSelect(option);\n    }\n  }, {\n    key: \"renderSelect\",\n    value: function renderSelect() {\n      var _this = this;\n\n      return this.props.options.map(function (option) {\n        return React.createElement(\"div\", {\n          key: option,\n          option: option,\n          onClick: function onClick() {\n            return _this.selectOption(option);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, option));\n      });\n    }\n  }, {\n    key: \"toggleDropdown\",\n    value: function toggleDropdown(e) {\n      if (e.target !== document.querySelector(\".filter-container.\" + this.props.type)) return;\n      document.querySelector(\".filter-container:not(.\" + this.props.type + \") .dropdown\").classList.remove(\"active\");\n      document.querySelector(\".filter-container.\" + this.props.type + \" .dropdown\").classList.toggle(\"active\");\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.selected) {\n        document.querySelector(\".dropdown > div[option='\" + this.props.selected + \"']\").classList.toggle(\"selected\");\n        this.selected = this.props.selected;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.props.options || this.props.options.length === 0) return \"Aucun film disponible\";\n      return React.createElement(\"div\", {\n        className: \"filter-container \" + this.props.type,\n        onClick: function onClick(e) {\n          return _this2.toggleDropdown(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.props.type === \"categories\" ? \"Filter par:\" : \"Afficher: \" + this.selected, React.createElement(FlipMove, {\n        className: \"dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.renderSelect()));\n    }\n  }]);\n\n  return Multiselect;\n}(Component);\n\nexport { Multiselect as default };","map":{"version":3,"sources":["/Users/yousrachahi/Downloads/react-interview-master 2/src/Multiselect.js"],"names":["React","Component","FlipMove","Multiselect","option","props","multiple","document","querySelectorAll","type","forEach","el","classList","remove","selected","querySelector","toggle","onSelect","options","map","selectOption","e","target","length","toggleDropdown","renderSelect"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAO,mBAAP;;IAEqBC,W;;;;;;;;;;;;;iCACPC,M,EAAQ;AACpB,UAAI,CAAC,KAAKC,KAAL,CAAWC,QAAhB,EAA0B;AACzBC,QAAAA,QAAQ,CACNC,gBADF,CACmB,uBAAuB,KAAKH,KAAL,CAAWI,IAAlC,GAAyC,kBAD5D,EAEEC,OAFF,CAEU,UAAAC,EAAE,EAAI;AACdA,UAAAA,EAAE,CAACC,SAAH,CAAaC,MAAb,CAAoB,UAApB;AACA,SAJF;AAKA,aAAKC,QAAL,GAAgBV,MAAhB;AACA;;AAEDG,MAAAA,QAAQ,CACNQ,aADF,CACgB,6BAA6BX,MAA7B,GAAsC,IADtD,EAEEQ,SAFF,CAEYI,MAFZ,CAEmB,UAFnB;AAGA,WAAKX,KAAL,CAAWY,QAAX,CAAoBb,MAApB;AACA;;;mCAEc;AAAA;;AACd,aAAO,KAAKC,KAAL,CAAWa,OAAX,CAAmBC,GAAnB,CAAuB,UAAAf,MAAM,EAAI;AACvC,eACC;AAAK,UAAA,GAAG,EAAEA,MAAV;AAAkB,UAAA,MAAM,EAAEA,MAA1B;AAAkC,UAAA,OAAO,EAAE;AAAA,mBAAM,KAAI,CAACgB,YAAL,CAAkBhB,MAAlB,CAAN;AAAA,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOA,MAAP,CADD,CADD;AAKA,OANM,CAAP;AAOA;;;mCAEciB,C,EAAG;AACjB,UAAIA,CAAC,CAACC,MAAF,KAAaf,QAAQ,CAACQ,aAAT,CAAuB,uBAAuB,KAAKV,KAAL,CAAWI,IAAzD,CAAjB,EACC;AAEDF,MAAAA,QAAQ,CACNQ,aADF,CACgB,4BAA4B,KAAKV,KAAL,CAAWI,IAAvC,GAA8C,aAD9D,EAEEG,SAFF,CAEYC,MAFZ,CAEmB,QAFnB;AAGAN,MAAAA,QAAQ,CACNQ,aADF,CACgB,uBAAuB,KAAKV,KAAL,CAAWI,IAAlC,GAAyC,YADzD,EAEEG,SAFF,CAEYI,MAFZ,CAEmB,QAFnB;AAGA;;;wCAEmB;AACnB,UAAI,KAAKX,KAAL,CAAWS,QAAf,EAAyB;AACxBP,QAAAA,QAAQ,CACNQ,aADF,CACgB,6BAA6B,KAAKV,KAAL,CAAWS,QAAxC,GAAmD,IADnE,EAEEF,SAFF,CAEYI,MAFZ,CAEmB,UAFnB;AAGA,aAAKF,QAAL,GAAgB,KAAKT,KAAL,CAAWS,QAA3B;AACA;AACD;;;6BAEQ;AAAA;;AACR,UAAI,CAAC,KAAKT,KAAL,CAAWa,OAAZ,IAAuB,KAAKb,KAAL,CAAWa,OAAX,CAAmBK,MAAnB,KAA8B,CAAzD,EACC,OAAO,uBAAP;AAED,aACC;AACC,QAAA,SAAS,EAAE,sBAAsB,KAAKlB,KAAL,CAAWI,IAD7C;AAEC,QAAA,OAAO,EAAE,iBAAAY,CAAC;AAAA,iBAAI,MAAI,CAACG,cAAL,CAAoBH,CAApB,CAAJ;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,KAAKhB,KAAL,CAAWI,IAAX,KAAoB,YAApB,GAAmC,aAAnC,GAAmD,eAAe,KAAKK,QAHzE,EAIC,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgC,KAAKW,YAAL,EAAhC,CAJD,CADD;AAQA;;;;EA5DuCxB,S;;SAApBE,W","sourcesContent":["import React, { Component } from \"react\";\nimport FlipMove from \"react-flip-move\";\nimport \"./Multiselect.css\";\n\nexport default class Multiselect extends Component {\n\tselectOption(option) {\n\t\tif (!this.props.multiple) {\n\t\t\tdocument\n\t\t\t\t.querySelectorAll(\".filter-container.\" + this.props.type + \" .dropdown > div\")\n\t\t\t\t.forEach(el => {\n\t\t\t\t\tel.classList.remove(\"selected\");\n\t\t\t\t});\n\t\t\tthis.selected = option;\n\t\t}\n\n\t\tdocument\n\t\t\t.querySelector(\".dropdown > div[option='\" + option + \"']\")\n\t\t\t.classList.toggle(\"selected\");\n\t\tthis.props.onSelect(option);\n\t}\n\n\trenderSelect() {\n\t\treturn this.props.options.map(option => {\n\t\t\treturn (\n\t\t\t\t<div key={option} option={option} onClick={() => this.selectOption(option)}>\n\t\t\t\t\t<span>{option}</span>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\n\ttoggleDropdown(e) {\n\t\tif (e.target !== document.querySelector(\".filter-container.\" + this.props.type))\n\t\t\treturn;\n\n\t\tdocument\n\t\t\t.querySelector(\".filter-container:not(.\" + this.props.type + \") .dropdown\")\n\t\t\t.classList.remove(\"active\");\n\t\tdocument\n\t\t\t.querySelector(\".filter-container.\" + this.props.type + \" .dropdown\")\n\t\t\t.classList.toggle(\"active\");\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.selected) {\n\t\t\tdocument\n\t\t\t\t.querySelector(\".dropdown > div[option='\" + this.props.selected + \"']\")\n\t\t\t\t.classList.toggle(\"selected\");\n\t\t\tthis.selected = this.props.selected;\n\t\t}\n\t}\n\n\trender() {\n\t\tif (!this.props.options || this.props.options.length === 0)\n\t\t\treturn \"Aucun film disponible\";\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={\"filter-container \" + this.props.type}\n\t\t\t\tonClick={e => this.toggleDropdown(e)}>\n\t\t\t\t{this.props.type === \"categories\" ? \"Filter par:\" : \"Afficher: \" + this.selected}\n\t\t\t\t<FlipMove className=\"dropdown\">{this.renderSelect()}</FlipMove>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}